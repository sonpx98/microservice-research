import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import federation from '@originjs/vite-plugin-federation'
import path from "path"
// NOTE: NOT importing baseConfig to avoid TailwindCSS conflicts

// https://vite.dev/config/
export default defineConfig({
  plugins: [
    react(),
    // NO TailwindCSS plugin to prevent @layer base conflicts
    federation({
        name: 'tarot',
        filename: 'remoteEntry.js',
        exposes: {
          './app': './src/TarotApp.tsx',
          // Expose assets path helper
          './assets': './src/utils/cardImages.ts',
        },
        shared: ['react', 'react-dom', 'react-router-dom']
    })
  ],
  server: {
    port: 5003,
    cors: true,
    // SECURITY: Configure strict CORS for images
    headers: {
      'X-Content-Type-Options': 'nosniff',
      'X-Frame-Options': 'SAMEORIGIN',
      'Content-Security-Policy': "default-src 'self'; img-src 'self' data: blob:; style-src 'self' 'unsafe-inline';"
    }
  },
  preview: {
    port: 5003,
    // SECURITY: Same headers for preview
    headers: {
      'X-Content-Type-Options': 'nosniff',
      'X-Frame-Options': 'SAMEORIGIN',
      'Content-Security-Policy': "default-src 'self'; img-src 'self' data: blob:; style-src 'self' 'unsafe-inline';"
    }
  },
  build: {
    rollupOptions: {
      external: [],
      output: {
        // SECURITY: Hash asset filenames to prevent enumeration
        assetFileNames: 'assets/[name].[hash][extname]',
        // SECURITY: Organize assets by type
        entryFileNames: 'assets/[name].[hash].js',
        chunkFileNames: 'assets/[name].[hash].js'
      }
    },
    // Copy assets to dist for Module Federation
    copyPublicDir: true,
    // SECURITY: Enable asset fingerprinting
    assetsDir: 'assets'
  },
  plugins: [
    federation({
        name: 'tarot',
        filename: 'remoteEntry.js',
        exposes: {
          './app': './src/TarotApp.tsx',
          // Expose assets path helper
          './assets': './src/utils/cardImages.ts',
        },
        shared: ['react', 'react-dom', 'react-router-dom']
    })],
    css: {
      // CSS Modules configuration for scoping
      modules: {
        // Enable CSS modules for .module.css files
        localsConvention: 'camelCase',
        generateScopedName: 'tarot_[name]__[local]___[hash:base64:5]'
      }
    },
    resolve: {
      alias: {
        "@": path.resolve(__dirname, "./src"),
      },
    },
})
